name: Deploy YOLO Dev

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      EC2_HOST_DEV:
        required: true
      EC2_USERNAME:
        required: true
      REGION:
        required: true
      BUCKET_NAME_DEV:
        required: true
      TABLE_NAME_DEV:
        required: true
      SQS_URL_DEV:
        required: true
      STORAGE_TYPE_DEV:
        required: true
      POLYBOT_URL_DEV:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          cat > ~/.ssh/config <<EOF
          Host ec2
            HostName ${{ secrets.EC2_HOST_DEV }}
            User ${{ secrets.EC2_USERNAME }}
            IdentityFile ~/.ssh/private_key
            StrictHostKeyChecking no
          EOF

      - name: Deploy YOLO Container
        env:
          POLYBOT_URL_DEV: $(( secrets.POLYBOT_URL_DEV }}
        run: |
          ssh ec2 <<EOF
          set -e 
          cd ~/YoloService  # update if needed
          git fetch origin
          git reset --hard origin/dev

          sudo rm -f .env
          touch .env && chmod 644 .env
          
          echo "IMG_NAME=${{ inputs.image }}" > .env
          echo "REGION=${{ secrets.REGION }}" >> .env
          echo "BUCKET_NAME=${{ secrets.BUCKET_NAME_DEV }}" >> .env
          echo "DDB_TABLE_NAME=${{ secrets.TABLE_NAME_DEV }}" >> .env
          echo "SQS_URL=${{ secrets.SQS_URL_DEV }}" >>.env
          echo "STORAGE_TYPE=${{ secrets.STORAGE_TYPE_DEV }}" >> .env
          echo "POLYBOT_URL=http://$POLYBOT_URL_DEV:8443" >> .env 
          
          cat .env  # debug output
          
          docker compose -f docker-compose.yolo.dev.yaml pull
          docker compose -f docker-compose.yolo.dev.yaml up -d 
          EOF
